<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context-4.0.xsd
     http://www.springframework.org/schema/mvc
	 http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!--使用spring组件扫描,一次性配置此包下所有的Handler-->
    <context:component-scan base-package="controller"/>

    <!-- 开启aop对类代理,用cglib需要配置这个开关 -->
    <!-- proxy-target-class="true" 与proxy-target-class="false"的区别：
    proxy-target-class属性值决定是基于接口的还是基于类的代理被创建。如果proxy-target-class 属性值被设置为true，那么基于类的代理将起作用（这时需要cglib库）。
    如果proxy-target-class属值被设置为false或者这个属性被省略，那么标准的JDK 基于接口的代理 -->
    <aop:config proxy-target-class="true"></aop:config>



    <!--mvc的注解驱动器-->
    <mvc:annotation-driven conversion-service="conversionService"></mvc:annotation-driven>

    <!-- 开启shiro注解支持 -->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>


    <!--转换器-->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="paramConverter.CustomDateConverter"/>
                <bean class="paramConverter.StringTrimConverter"/>
            </set>
        </property>
    </bean>

    <!--定义统一异常处理器-->
    <bean class="exception.CustomExceptionResolver"></bean>

    <!-- 文件上传 CommonsMultipartResolver依赖我们传入的fileupload jar包-->
    <!--<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">-->
        <!--&lt;!&ndash; 设置上传文件的最大尺寸为5MB &ndash;&gt;-->
        <!--<property name="maxUploadSize">-->
            <!--<value>5242880</value>-->
        <!--</property>-->
    <!--</bean>-->

    <bean id="placeholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:/log4j.properties</value>
            </list>
        </property>
    </bean>

    <!--log4j-->
    <!--<context:property-placeholder location="classpath:/log4j.properties"/>-->

    <!--配置JSP视图解析器,显示ViewResolver-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 静态资源映射:当在web.xml中DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->
    <mvc:default-servlet-handler/>

</beans>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

    <!--web.xml中shiro的filter对应的bean-->
    <!-- Shiro 的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!-- loginUrl认证提交地址，如果没有认证将会请求此地址进行认证，请求此地址将由formAuthenticationFilter进行表单认证 -->
        <property name="loginUrl" value="/login"/>
        <!--认证成功统一跳转到first.actio，建议不配置，不配置的话shiro认证成功会自动到上一个请求路径-->
        <property name="successUrl" value="/first"/>
        <property name="unauthorizedUrl" value="/refuse.jsp"/>

        <!--自定义filter-->
        <property name="filters">
            <map>
                <!-- 将自定义的FormAuthenticationFilter注入shiroFiler中 -->
                <!--<entry key="authc" value-ref="formAuthenticationFilter"/>-->
            </map>
        </property>

        <!-- 过虑器链定义，从上向下顺序执行，一般将/**放在最下边 -->
        <property name="filterChainDefinitions">
            <value>
                <!--对静态资源设置匿名访问-->
                /images/**=anon
                /js/**=anon
                /styles/**=anon
                /jqueryLib/**=anon

                <!--验证码-->
                /validatecode.jsp=anon

                <!--请求这个地址就自动退出-->
                /logout=logout

                <!--商品查询需要商品查询权限，取消url拦截配置，采用注解授权-->
                /items/queryItems=perms[item:query]
                <!--商品修改需要商品修改权限-->
                /items/editItems=perms[item:edit]

                <!--配置记住我或认证通过可以访问的地址-->
                /index.jsp=user
                /first=user
                /welcome.jsp=user

                <!-- -/**=authc 表示所有的url都必须认证通过才可以访问- -->
                /** = authc

                <!--/**=anon 表示所有的url都可以匿名访问-->
            </value>
        </property>
    </bean>

    <!--securityManage-->
    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--自定义realm-->
        <property name="realm" ref="userRealm"/>
        <!--会话管理器-->
        <property name="sessionManager" ref="sessionManager"/>
        <!--缓存管理器-->
        <!--<property name="cacheManager" ref="cacheManager"/>-->
        <!-- 记住我 -->
        <!--<property name="rememberMeManager" ref="rememberMeManager"/>-->
    </bean>

    <!--自定义realm-->
    <bean id="userRealm" class="shiro.CustomRealm">
        <!--将凭证匹配器设置到realm中，realm按照凭证匹配器要求进行散列-->
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <property name="cachingEnabled" value="false"/>
    </bean>

    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- session的失效时长，单位毫秒 -->
        <property name="globalSessionTimeout" value="600000"/>
        <!-- 删除失效的session -->
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>

    <!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>

    <!-- 会话ID生成器 -->
    <!--<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>-->

    <!-- 缓存管理器 -->
    <bean id="cacheManager" class="shiro.SpringCacheManagerWrapper">
        <property name="cacheManager" ref="springCacheManager"/>
    </bean>

    <!-- spring缓存管理器 -->
    <bean id="springCacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager" ref="ehcacheManager"/>
    </bean>

    <!--ehcache-->
    <bean id="ehcacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:shiro-ehcache.xml"/>
    </bean>

    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/><!-- 30天 -->
    </bean>

    <!--自定义form认证过滤器-->
    <!--<bean id="formAuthenticationFilter"-->
          <!--class="shiro.CustomFromAuthenticationFilter">-->
        <!--&lt;!&ndash; 表单中账号的input名称 &ndash;&gt;-->
        <!--<property name="usernameParam" value="username"/>-->
        <!--&lt;!&ndash; 表单中密码的input名称 &ndash;&gt;-->
        <!--<property name="passwordParam" value="password"/>-->
        <!--&lt;!&ndash;记住我input的名称&ndash;&gt;-->
        <!--<property name="rememberMeParam" value="rememberMe"/>-->
    <!--</bean>-->

</beans>